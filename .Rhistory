}
}
##### sin totla
}else{
fe = list()
for (i in 1:length(unique(var))){
if(!is.null(names(labelled::val_labels(var)))){
fe[[i]] <- sort(unique(var),decreasing = T)[i]
names(fe[[i]]) <- rev(names(labelled::val_labels(var)))[i] }else{
if(is.null(levels(var))){
fe[[i]] <- unique(var)[i]
names(fe[[i]]) <- unique(var)[i]
}else{
fe[[i]] <- levels(var)[i]
names(fe[[i]]) <- levels(var)[i]
}
}
}
}
return(fe)
}
#### creamos funcion para extraer categorias de variable a tabular ######
lista_categorias_t(bkish$enc_region16FIX) -> list_reg; list_reg
lista_categorias_t(bkish$rph_sexo) -> list_sex; list_sex
tabulado = data.frame(matrix(" ",1,1))
col = 2
for (i in seq_len(length(list_sex))) {
row = 2
# tabulado[(row-1),col] =  names(list_sex[[i]][1])
for (j in seq_len(length(list_reg))) {
#  tabulado[row,(col-1)] =  names(list_reg[[j]][1])
tabulado[row,col] = as.vector(svymean(~bkish[[vars_indicador[1]]][bkish[[vregion[1]]] %in% list_reg[[j]] & bkish$rph_sexo %in% list_sex[[i]]], design= dc_pers[bkish[[vregion[1]]] %in% list_reg[[j]]  & bkish$rph_sexo %in% list_sex[[i]]]))
row = row + 1
}
col = col + 1
}
tabulado = data.frame(matrix(" ",1,1))
col = 2
for (i in seq_len(length(list_sex))) {
row = 2
# tabulado[(row-1),col] =  names(list_sex[[i]][1])
for (j in seq_len(length(list_reg))) {
#  tabulado[row,(col-1)] =  names(list_reg[[j]][1])
tabulado[row,col] = as.vector(svymean(~bkish[[vars_indicador[1]]][bkish[[v_region[1]]] %in% list_reg[[j]] & bkish$rph_sexo %in% list_sex[[i]]], design= dc_pers[bkish[[v_region[1]]] %in% list_reg[[j]]  & bkish$rph_sexo %in% list_sex[[i]]]))
row = row + 1
}
col = col + 1
}
tabulado[,1] = as.character(tabulado[,1])
### nombres
tabulado[1,2:(length(list_sex)+1)] = names(unlist(list_sex))[!is.na(names(unlist(list_sex)))]
tabulado[2:(length(list_cat)+1),1] = names(unlist(list_cat))[!is.na(names(unlist(list_cat)))]
names(tabulado) = NULL; tabulado
tabulado[2:(length(v_region)+1),1] = names(unlist(v_region))[!is.na(names(unlist(v_region)))]
unlist(v_region)
unlist(list_sex)
tabulado[2:(length(list_reg)+1),1] = names(unlist(list_reg))[!is.na(names(unlist(list_reg)))]
names(tabulado) = NULL; tabulado
runApp('Documents/INE/Mesa de calidad/app_tabulados')
reticulate::repl_python()
b = "hello world"
reticulate::repl_python()
b = " hello world "
no
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
680*3
install.packages("tabulizer")
install.packages("pdfsearch")
library(pdftools)
library(quanteda)
library(readtext)
library(stringi)
library(mgsub)
library(stringr)
library(tabulizer)
library(pdfsearch)
library(tidyverse)
setwd("/home/ricardo/Documents/Iching_proceso")
iching <- pdf_text("iching.pdf")
#heading_search(iching, pdf_toc = T, path = T)
#
#
#result <- keyword_search(file,
#                         keyword = c('measurement', 'error'),
#                         path = TRUE)
pdf_toc("iching.pdf") -> hexagramas
hexa <- NA
for (i in 1:72) {
hexa[i] <- print(hexagramas[2][[1]][i][[1]][[1]])
}
hexa[9:72] -> hexa
for (i in 1:64) {
#pag[i] <- grep(hexa[i], iching)
print(grep(hexa[i], iching))
}
ichingl <- tolower(iching)
hexal <- tolower(hexa)
mgsub( hexal, c("/", "\\(", "\\)", "\n") , c("","", ""," ")) -> hexal
mgsub( ichingl, c("/", "\\(", "\\)", "\n") , c("","", ""," ")) -> ichingl
str_squish(ichingl) -> ichingl
str_squish(hexal) -> hexal
paste0(1:64,".-") -> pos
paste(ichingl, collapse = " ") -> uiching
#mgsub('\"',"", uiching)
toke
str_split(uiching," ",simplify = T) -> tok_iching
t(tok_iching) -> tok_iching
rm(list = setdiff(ls(),c("tok_iching","pos")))
tok_iching[grep(paste0("^",pos[1],"$"),tok_iching):length(tok_iching)] -> tok_iching2
#tok_iching[ tok_iching == pos[1]]
for (i in 1:64) {
print(grep(paste0("^",pos[i],"$"),tok_iching))
}
print(grep(paste0("^",pos[1],"$"),tok_iching))
tok_iching[grep(paste0("^",pos[1],"$"),tok_iching)]
print(grep(paste0("^",pos[1],"$"),tok_iching2))
print(grep(paste0("^",pos[i],"$"),tok_iching2))
for (i in 1:64) {
print(grep(paste0("^",pos[i],"$"),tok_iching2))
}
pos <- NA
for (i in 1:64) {
if(length(grep(paste0("^",poshex[i],"$"),tok_iching2)) != 0){
pos[i] <- grep(paste0("^",poshex[i],"$"),tok_iching2)
}else{
pos[i] <- NA
}
}
paste0(1:64,".-") -> poshex
paste(ichingl, collapse = " ") -> uiching
#mgsub('\"',"", uiching)
toke
paste0(1:64,".-") -> poshex
paste(ichingl, collapse = " ") -> uiching
setwd("/home/ricardo/Documents/Iching_proceso")
iching <- pdf_text("iching.pdf")
pdf_toc("iching.pdf") -> hexagramas
hexa <- NA
for (i in 1:72) {
hexa[i] <- print(hexagramas[2][[1]][i][[1]][[1]])
}
hexa[9:72] -> hexa
for (i in 1:64) {
#pag[i] <- grep(hexa[i], iching)
print(grep(hexa[i], iching))
}
ichingl <- tolower(iching)
hexal <- tolower(hexa)
mgsub( hexal, c("/", "\\(", "\\)", "\n") , c("","", ""," ")) -> hexal
mgsub( ichingl, c("/", "\\(", "\\)", "\n") , c("","", ""," ")) -> ichingl
str_squish(ichingl) -> ichingl
str_squish(hexal) -> hexal
paste0(1:64,".-") -> poshex
paste(ichingl, collapse = " ") -> uiching
str_split(uiching," ",simplify = T) -> tok_iching
t(tok_iching) -> tok_iching
rm(list = setdiff(ls(),c("tok_iching","poshex", "hexal")))
tok_iching[grep(paste0("^",poshex[1],"$"),tok_iching):length(tok_iching)] -> tok_iching
pos <- NA
for (i in 1:64) {
if(length(grep(paste0("^",poshex[i],"$"),tok_iching)) != 0){
pos[i] <- grep(paste0("^",poshex[i],"$"),tok_iching)
}else{
pos[i] <- NA
}
}
pos
df <- data.frame("pos"<- pos)
df <- data.frame("pos_hex" <- poshex,
"hexa" <- hexal,
"pos"<- pos)
df
df <- data.frame("pos_hex" = poshex,
"hexa" = hexal,
"pos"= pos)
df
df <- data.frame("N" = 1:64,
"pos_hex" = poshex,
"hexa" = hexal,
"pos"= pos)
df <- data.frame("N" = 1:64,
"pos_hex" = poshex,
"hexa" = hexal,
"pos"= pos)
df
df$pos[df$N == 5]
tok_iching[tok_iching > df$pos[df$N == 5 & tok_iching < df$pos[df$N == 7]]
tok_iching < df$pos[df$N == 7]
tok_iching[tok_iching > df$pos[df$N == 5] & tok_iching < df$pos[df$N == 7]]
tok_iching
tok_ichingDF = data.frame("N" = 1:length(tok_iching),
"token" = tok_iching)
tok_iching$token[tok_iching$N > df$pos[df$N == 5] & tok_iching$N < df$pos[df$N == 7]]
tok_iching$token[tok_iching$N > df$pos[df$N == 5] & tok_iching$N < df$pos[df$N == 7],]
tok_iching$N < df$pos[df$N == 7]
tok_ichingDF$token[tok_ichingDF$N > df$pos[df$N == 5] & tok_ichingDF$N < df$pos[df$N == 7]]
tok_ichingDF$token[tok_ichingDF$N >= df$pos[df$N == 5] & tok_ichingDF$N < df$pos[df$N == 7]]
tok_ichingDF$token[tok_ichingDF$N > df$pos[df$N == 5] & tok_ichingDF$N < df$pos[df$N == 7]]
tok_ichingDF$token[tok_ichingDF$N > df$pos[df$N == 5] & tok_ichingDF$N < df$pos[df$N == 7]] == "6"
tok_ichingDF$token[tok_ichingDF$token[tok_ichingDF$N > df$pos[df$N == 5] & tok_ichingDF$N < df$pos[df$N == 7]] == "6"]
tok_ichingDF$token[tok_ichingDF$token[tok_ichingDF$N > df$pos[df$N == 5] & tok_ichingDF$N < df$pos[df$N == 7]] == "6 ."]
tok_ichingDF$token[tok_ichingDF$token[tok_ichingDF$N > df$pos[df$N == 5] & tok_ichingDF$N < df$pos[df$N == 7]] == "-"]
tok_ichingDF$token[tok_ichingDF$N > df$pos[df$N == 5] & tok_ichingDF$N < df$pos[df$N == 7]]
grep("6.-",tok_ichingDF$token[tok_ichingDF$N > df$pos[df$N == 5] & tok_ichingDF$N < df$pos[df$N == 7]])
tok_ichingDF$token[tok_ichingDF$N   == grep("6.-",tok_ichingDF$token[tok_ichingDF$N > df$pos[df$N == 5] & tok_ichingDF$N < df$pos[df$N == 7]])]
grep("6.-",tok_ichingDF$token[tok_ichingDF$N > df$pos[df$N == 5] & tok_ichingDF$N < df$pos[df$N == 7]])
grep("6.-",tok_ichingDF$token[tok_ichingDF$N > df$pos[df$N == 5] & tok_ichingDF$N < df$pos[df$N == 7]]) -> p
tok_ichingDF$token[tok_ichingDF$N   ==  p]
hexal
grep("6.-",tok_ichingDF$token[tok_ichingDF$N > df$pos[df$N == 5] & tok_ichingDF$N < df$pos[df$N == 7]])
tok_ichingDF$N   ==  p
tok_ichingDF$token[tok_ichingDF$N   ==  p]
View(tok_ichingDF)
pos_hex
hexal
pos_hex[pos_hex = "6.-"]
pos_hex = "6.-"
paste0(1:64,".-") -> poshex
poshex[poshex == "6.-"]
poshex[poshex == "6.-"]  = "6.-sung"
pos <- NA
for (i in 1:64) {
if(length(grep(paste0("^",poshex[i],"$"),tok_iching)) != 0){
pos[i] <- grep(paste0("^",poshex[i],"$"),tok_iching)
}else{
pos[i] <- NA
}
}
for (i in 1:64) {
if(length(grep(paste0("^",poshex[i],"$"),tok_iching)) != 0){
pos[i] <- grep(paste0("^",poshex[i],"$"),tok_iching)
}else{
pos[i] <- NA
}
};pos
hexal
poshex[poshex == "43.-"]   = "43."
pos <- NA
for (i in 1:64) {
if(length(grep(paste0("^",poshex[i],"$"),tok_iching)) != 0){
pos[i] <- grep(paste0("^",poshex[i],"$"),tok_iching)
}else{
pos[i] <- NA
}
};pos
grep("29.-",tok_iching)
grep("2 9.-",tok_iching)
grep(c("2","9").,tok_iching)
grep(c("2","9"),tok_iching)
hexal
grep(c("k’an lo insondable el abismo"),tok_iching)
grep(c("insondable el abismo"),tok_iching)
grep(c("insondable"),tok_iching)
contexto <- function(n,cant)
{
p1 <- n-cant
p2 <- n+cant
return(tok_ichingDF$token[tok_ichingDF$N > p1 & tok_ichingDF$N < p2])
}
contexto <- function(n,cant)
{
p1 <- n-cant
p2 <- n+cant
return(tok_ichingDF$token[tok_ichingDF$N > p1 & tok_ichingDF$N < p2])
}
contexto(4347, 10)
contexto(grep(c("insondable"),tok_iching), 10)
for (i in grep(c("insondable"),tok_iching)) {
contexto(i, 10)
}
print(contexto(i, 10))
for (i in grep(c("insondable"),tok_iching)) {
print(contexto(i, 10))
}
for (i in grep(c("2"),tok_iching)) {
print(contexto(i, 10))
}
for (i in grep("^2$",tok_iching)) {
print(contexto(i, 10))
}
for (i in grep("^2$",tok_iching)) {
print(contexto(i, 10))
print(i)
}
contexto(32728, 20)
contexto(32728, 40)
tok_iching[1:32728]
contexto(32728, 40)
a              bismo,         e              l              a              g              ua)
contexto(32728, 22)
contexto(32728, 23)
contexto(32728, 0)
32728 + 23
tok_iching[32751]
tok_iching[32750]
paste(tok_iching[1:32727],c("29.-", "k’an","lo","insondable","el","abismo,","el","agua"),tok_iching[32750:72045]) -> fe
tok_iching[1:32727]
tok_iching[32750:72045]
tok_iching[32750:72045]
paste(tok_iching[1:32727],c("29.-", "k’an","lo","insondable","el","abismo,","el","agua"),tok_iching[32750:72045]) -> fe
paste(tok_iching[1:32727],c("29.-", "k’an","lo","insondable","el","abismo,","el","agua"),tok_iching[32750:72045], collapse = " ") -> fe
paste(c("29.-", "k’an","lo","insondable","el","abismo,","el","agua"))
paste(tok_iching[1:32727])
paste(tok_iching[1:32727]),c("29.-", "k’an","lo","insondable","el","abismo,","el","agua"),tok_iching[32750:72045], sep = ",") -> fe
paste(tok_iching[1:32727],c("29.-", "k’an","lo","insondable","el","abismo,","el","agua"),tok_iching[32750:72045], collapse = ",") -> fe
paste(tok_iching[1:32727],c("29.-", "k’an","lo","insondable","el","abismo,","el","agua"),tok_iching[32750:72045], collapse = ",") -> fe
paste(tok_iching[1:32727],c("29.-", "k’an","lo","insondable","el","abismo,","el","agua"),tok_iching[32750:72045]) -> fe
paste(tok_iching[1:32727],c("29.-", "k’an","lo","insondable","el","abismo,","el","agua"),tok_iching[32750:72045]) -> fe
contexto(32728, 23)
tok_iching[32728:32750]
paste(tok_iching[32728:32750])
paste(tok_iching[32728:32750], collapse = "")
32728 + 22
paste(tok_iching[32728:32749], collapse = "")
tok_iching[32728:32749] <- c("29.-", "k’an","lo","insondable","el","abismo,","el","agua")
paste(tok_iching[1:32727],c("29.-", "k’an","lo","insondable","el","abismo,","el","agua"))
paste(tok_iching[1:32727],c("29.-", "k’an","lo","insondable","el","abismo,","el","agua"),tok_iching[32750:72045]) -> fe
paste(tok_iching[1:3],c("29.-", "k’an","lo","insondable","el","abismo,","el","agua"),tok_iching[32750:32753]) -> fe
fe
paste(tok_iching[1:3],c("29.-", "k’an","lo","insondable","el","abismo,","el","agua"),tok_iching[32750:32753]) -> fe
fe
tok_iching[1:3]
c(tok_iching[1:32727],c("29.-", "k’an","lo","insondable","el","abismo,","el","agua"),tok_iching[32750:72045]) -> fe
pos <- NA
for (i in 1:64) {
if(length(grep(paste0("^",poshex[i],"$"),tok_iching)) != 0){
pos[i] <- grep(paste0("^",poshex[i],"$"),tok_iching)
}else{
pos[i] <- NA
}
};pos
contexto(32728, 23)
c(tok_iching[1:32727],c("29.-", "k’an","lo","insondable","el","abismo,","el","agua"),tok_iching[32750:72045]) -> tok_iching
contexto(32728, 23)
pos <- NA
for (i in 1:64) {
if(length(grep(paste0("^",poshex[i],"$"),tok_iching)) != 0){
pos[i] <- grep(paste0("^",poshex[i],"$"),tok_iching)
}else{
pos[i] <- NA
}
};pos
tok_ichingDF = data.frame("N" = 1:length(tok_iching),
"token" = tok_iching)
contexto(32728, 23)
df <- data.frame("N" = 1:64,
"pos_hex" = poshex,
"hexa" = hexal,
"pos"= pos)
grep("6.-",tok_ichingDF$token[tok_ichingDF$N > df$pos[df$N == 5] & tok_ichingDF$N < df$pos[df$N == 7]]) -> p
tok_ichingDF$token[tok_ichingDF$N   ==  p]
df
tok_ichingDF
df$pos[1+1]
df$pos[1]
tok_ichingDF$token[tok_ichingDF$N >= df$pos[1] & tok_ichingDF$N > df$pos[1+1]]
last(df$pos)
for (i in 1:64) {
if(i!=64){
df$text[i] <- tok_ichingDF$token[tok_ichingDF$N >= df$pos[i] & tok_ichingDF$N > df$pos[i+1]]
}else{
df$text[i] <- tok_ichingDF$token[tok_ichingDF$N >= df$pos[i] & tok_ichingDF$N > last(df$pos)]
}
}
df
for (i in 1:64) {
if(i != 64){
df$text[i] <- tok_ichingDF$token[tok_ichingDF$N >= df$pos[i] & tok_ichingDF$N > df$pos[i+1]]
}else{
df$text[i] <- tok_ichingDF$token[tok_ichingDF$N >= df$pos[i] & tok_ichingDF$N > last(df$pos)]
}
}
tok_ichingDF$token[tok_ichingDF$N >= df$pos[i] & tok_ichingDF$N > df$pos[i+1]]
tok_ichingDF$token[tok_ichingDF$N >= df$pos[i] & tok_ichingDF$N > last(df$pos)]
i
df$pos[i]
df$text <- NA
for (i in 1:64) {
if(i != 64){
df$text[i] <- tok_ichingDF$token[tok_ichingDF$N >= df$pos[i] & tok_ichingDF$N > df$pos[i+1]]
}else{
df$text[i] <- tok_ichingDF$token[tok_ichingDF$N >= df$pos[i] & tok_ichingDF$N > last(df$pos)]
}
}
#tok_iching[ tok_iching == poshex[1]]
warnings()
df$text <- NA
for (i in 1:64) {
if(i != 64){
df$text[i] <- list(tok_ichingDF$token[tok_ichingDF$N >= df$pos[i] & tok_ichingDF$N > df$pos[i+1]])
}else{
df$text[i] <- list(tok_ichingDF$token[tok_ichingDF$N >= df$pos[i] & tok_ichingDF$N > last(df$pos)])
}
}
View(df)
df
df$text[1]
library(pdftools)
install.packages("pdftools")
install.packages("pdfsearch")
library(pdftools)
install.packages("pdftools")
install.packages("pdftools")
library(pdftools)
library(quanteda)
library(readtext)
library(stringi)
library(mgsub)
library(readtext)
install.packages("readtext")
library(readtext)
library(stringi)
library(mgsub)
library(stringr)
library(tabulizer)
library(pdfsearch)
library(tidyverse)
library(ggplot2)
setwd("/home/ricardo/Documents/Iching_proceso")
iching <- pdf_text("iching.pdf")
pdf_toc("iching.pdf") -> hexagramas
hexa <- NA
iching
View(hexagramas)
hexa <- NA
for (i in 1:72) {
hexa[i] <- print(hexagramas[2][[1]][i][[1]][[1]])
}
hexagramas[2][[1]][i][[1]][[1]]
saveRDS(hexagramas,"iching.rds")
fe <-readRDS(iching.rds)
fe <-readRDS(iching.rds)
fe <-readRDS("iching.rds")
fe
hexa <- NA
for (i in 1:72) {
hexa[i] <- print(hexagramas[2][[1]][i][[1]][[1]])
}
hexa
hexa[9:72] -> hexa
for (i in 1:64) {
#pag[i] <- grep(hexa[i], iching)
print(grep(hexa[i], iching))
}
ichingl <- tolower(iching)
ichingl
hexal <- tolower(hexa)
mgsub( hexal, c("/", "\\(", "\\)", "\n") , c("","", ""," ")) -> hexal
hexal
mgsub( ichingl, c("/", "\\(", "\\)", "\n") , c("","", ""," ")) -> ichingl
ichingl
ichingl
str_squish(ichingl) -> ichingl
str_squish(hexal) -> hexal
poshex
paste0(1:64,".-") -> poshex
poshex
paste(ichingl, collapse = " ") -> uiching
uiching
paste(ichingl, collapse = " ") -> uiching
str_split(uiching," ",simplify = T) -> tok_iching
t(tok_iching) -> tok_iching
rm(list = setdiff(ls(),c("tok_iching","poshex", "hexal")))
tok_iching[grep(paste0("^",poshex[1],"$"),tok_iching):length(tok_iching)] -> tok_iching
hexal
poshex[poshex == "6.-"]  = "6.-sung"
poshex[poshex == "43.-"]   = "43."
tok_ichingDF = data.frame("N" = 1:length(tok_iching),
"token" = tok_iching)
contexto <- function(n,cant)
{
p1 <- n-cant
p2 <- n+cant
return(tok_ichingDF$token[tok_ichingDF$N > p1 & tok_ichingDF$N < p2])
}
for (i in grep("^2$",tok_iching)) {
print(contexto(i, 0))
print(i)
}
contexto(32728, 23)
32728 + 22
c(tok_iching[1:32727],c("29.-", "k’an","lo","insondable","el","abismo,","el","agua"),tok_iching[32750:72045]) -> tok_iching
#### obtenemos posiciones de los títulos
str_remove(string = tok_iching, pattern = "[[:punct:]]") -> tok_iching
mgsub("\\.", "", tok_iching)
pos <- NA
for (i in 1:64) {
if(length(grep(paste0("^",poshex[i],"$"),tok_ichingCL)) != 0){
pos[i] <- grep(paste0("^",poshex[i],"$"),tok_ichingCL)
}else{
pos[i] <- NA
}
};pos
contexto(32728, 23)
df$text <- NA
for (i in 1:64) {
if(i != 64){
df$text[i] <- list(tok_ichingDF$token[tok_ichingDF$N >= df$pos[i] & tok_ichingDF$N < df$pos[i+1]])
}else{
df$text[i] <- list(tok_ichingDF$token[tok_ichingDF$N >= df$pos[i] & tok_ichingDF$N < length(tok_iching)])
}
}
df$text <- NA
for (i in 1:64) {
if(i != 64){
df$text[i] <- list(tok_ichingDF$token[tok_ichingDF$N >= df$pos[i] & tok_ichingDF$N < df$pos[i+1]])
}else{
df$text[i] <- list(tok_ichingDF$token[tok_ichingDF$N >= df$pos[i] & tok_ichingDF$N < length(tok_iching)])
}
}
